{"version":3,"sources":["Navbar.js","Details.js","Search.js","Home.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","Details","cityName","mainData","name","Math","round","temp","feels_like","temp_max","temp_min","humidity","Search","data","useState","setCityName","setName","setMainData","IsPending","setIsPending","error","setError","onSubmit","e","axios","get","then","res","main","document","querySelector","value","catch","errr","response","status","preventDefault","type","placeholder","onChange","target","Home","NotFound","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"6NAYeA,EAXA,WACb,OACE,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAAMC,GAAG,eAAT,SACE,+CAEF,qBAAKD,UAAU,c,yBCsBNE,EA7BC,SAAC,GAA+B,EAA9BC,SAA+B,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KACpC,OACE,8BACE,qBAAKL,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BK,IAC5B,oBAAGL,UAAU,YAAb,kCACuB,iCAAOM,KAAKC,MAAMH,EAASI,MAA3B,eAEvB,oBAAGR,UAAU,YAAb,yBACc,qCAAQM,KAAKC,MAAMH,EAASK,YAA5B,eAEd,oBAAGT,UAAU,YAAb,iBAEE,qCAAQM,KAAKC,MAAMH,EAASM,UAA5B,YAFF,mBAGE,qCAAQJ,KAAKC,MAAMH,EAASO,UAA5B,cAEF,oBAAGX,UAAU,YAAb,sBAEE,qCAAQI,EAASQ,SAAjB,oBC0ECC,EA3FA,WACb,IAKIC,EALJ,EAAgCC,mBAAS,MAAzC,mBAAOZ,EAAP,KAAiBa,EAAjB,KACA,EAAwBD,mBAAS,MAAjC,mBAAOV,EAAP,KAAaY,EAAb,KACA,EAAgCF,mBAAS,MAAzC,mBAAOX,EAAP,KAAiBc,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA0BL,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KA+DA,OACE,qBAAKtB,UAAU,mBAAf,SACE,uBAAMA,UAAU,cAAcuB,SA1DX,SAACC,GAClBrB,GACFiB,GAAa,GACbE,GAAS,GACTG,IACGC,IADH,4DAEyDvB,EAFzD,yDAIGwB,MAAK,SAACC,GACLR,GAAa,GACbN,EAAOc,EAAId,KAAKe,KAChBZ,EAAQW,EAAId,KAAKT,MACjBa,EAAYJ,GACZgB,SAASC,cAAc,SAASC,MAAQ,GACxChB,EAAY,OAEbiB,OAAM,SAACC,GACuB,MAAzBA,EAAKC,SAASC,QAChBd,EAAS,uCACXF,GAAa,GACbF,EAAY,WAGhBI,EAAS,gCACTF,GAAa,IA6BfF,EAAY,MACZM,EAAEa,kBAIA,UACE,uBACEC,KAAK,OACLtC,UAAU,eACVuC,YAAY,sBACZC,SAnEe,SAAChB,GACtBR,EAAYQ,EAAEiB,OAAOT,UAoEjB,wBAAQM,KAAK,SAAb,mBAEA,uBACClC,GACC,cAAC,EAAD,CAASD,SAAUA,EAAUC,SAAUA,EAAUC,KAAMA,IAExDc,GAAa,8CACbE,GAAS,oBAAIrB,UAAU,aAAd,SAA4BqB,IACtC,6BC9EOqB,EATF,WACX,OACE,sBAAK1C,UAAU,OAAf,UACE,+DACA,cAAC,EAAD,QCSS2C,EAZE,WACf,OACE,sBAAK3C,UAAU,YAAf,UACE,uCACA,0DACA,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,GAAvB,mC,eCoBS4C,MApBf,WACE,OACE,cAAC,IAAD,UACE,sBAAK5C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6C,OAAK,EAACC,KAAM,CAAC,IAAI,iBAAxB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBCbdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,W","file":"static/js/main.2dc139c8.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className='navbar'>\r\n      <Link to='/weather-app'>\r\n        <h1>Weather App</h1>\r\n      </Link>\r\n      <div className='links'></div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const Details = ({cityName, mainData, name}) => {\r\n  return (\r\n    <div>\r\n      <div className='container'>\r\n        <div className='card'>\r\n          <div className='card-body'>\r\n            <h3 className='card-title'>{name}</h3>\r\n            <p className='card-text'>\r\n              Current temperature: <span>{Math.round(mainData.temp)}째C </span>\r\n            </p>\r\n            <p className='card-text'>\r\n              Feels Like: <span> {Math.round(mainData.feels_like)}째C </span>\r\n            </p>\r\n            <p className='card-text'>\r\n              Max:\r\n              <span> {Math.round(mainData.temp_max)}째C </span> .......... Min:\r\n              <span> {Math.round(mainData.temp_min)}째C</span>\r\n            </p>\r\n            <p className='card-text'>\r\n              Humidity:\r\n              <span> {mainData.humidity} </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import {useState} from 'react';\r\nimport axios from 'axios';\r\nimport Details from './Details';\r\nconst Search = () => {\r\n  const [cityName, setCityName] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [mainData, setMainData] = useState(null);\r\n  const [IsPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(true);\r\n  let data;\r\n\r\n  const handelOnChange = (e) => {\r\n    setCityName(e.target.value);\r\n  };\r\n\r\n  const handelOnSubmit = (e) => {\r\n    if (cityName) {\r\n      setIsPending(true);\r\n      setError(false);\r\n      axios\r\n        .get(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=65bd94edd330fcf61fa67b120888b455&units=metric`\r\n        )\r\n        .then((res) => {\r\n          setIsPending(false);\r\n          data = res.data.main;\r\n          setName(res.data.name);\r\n          setMainData(data);\r\n          document.querySelector('input').value = '';\r\n          setCityName('');\r\n        })\r\n        .catch((errr) => {\r\n          if (errr.response.status !== 200)\r\n            setError('Name of the city is not correct...!');\r\n          setIsPending(false);\r\n          setMainData(null);\r\n        });\r\n    } else {\r\n      setError('Please enter a city name...!');\r\n      setIsPending(false);\r\n    }\r\n\r\n    // try {\r\n    //   if (!cityName) setError('Please enter a city name');\r\n    // } catch (err) {\r\n    //   setIsPending(false);\r\n    // }\r\n    // axios\r\n    //   .get(\r\n    //     `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=65bd94edd330fcf61fa67b120888b455&units=metric`\r\n    //   )\r\n    //   .then((res) => {\r\n    //     setError(false);\r\n    //     setIsPending(false);\r\n    //     data = res.data.main;\r\n    //     console.log(res);\r\n    //     setName(res.data.name);\r\n    //     setMainData(data);\r\n    //     document.querySelector('input').value = '';\r\n    //     setCityName('');\r\n    //   })\r\n    //   .catch((errr) => {\r\n    //     if (errr.response.status !== 200) console.log(errr.response);\r\n    //     // setError('Name of the city is not correct... ');\r\n    //     setIsPending(false);\r\n    //     setMainData(null);\r\n    //   });\r\n\r\n    setMainData(null);\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <div className='search-container'>\r\n      <form className='search-form' onSubmit={handelOnSubmit}>\r\n        <input\r\n          type='text'\r\n          className='search-input'\r\n          placeholder='Enter you city name'\r\n          onChange={handelOnChange}\r\n        />\r\n        <button type='submit'>Check</button>\r\n\r\n        <br />\r\n        {mainData && (\r\n          <Details cityName={cityName} mainData={mainData} name={name} />\r\n        )}\r\n        {IsPending && <div>Loading... </div>}\r\n        {error && <h4 className='error-text'>{error}</h4>}\r\n        <br />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import Search from './Search';\r\nconst Home = () => {\r\n  return (\r\n    <div className='home'>\r\n      <h3> Search for your city weather</h3>\r\n      <Search />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {Link} from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='not-found'>\r\n      <h2>Sorry</h2>\r\n      <p>This page dose not exists</p>\r\n      <Link to='/' className=''>\r\n        Back to home page\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Navbar from './Navbar';\nimport Home from './Home';\nimport NotFound from './NotFound';\nimport './App.css';\n\nimport {Switch, Route, BrowserRouter as Router} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div className='content'>\n          <Switch>\n            <Route exact path={['/','/weather-app/']}>\n              <Home />\n            </Route>\n            <Route path='*'>\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}